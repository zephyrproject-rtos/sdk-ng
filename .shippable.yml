language: c

compiler: gcc

env:
    global:
        - USE_CCACHE=1
    matrix:
      - TARGET=nios2
      - TARGET=arm
      - TARGET=arm64
      - TARGET=riscv64
      - TARGET=arc
      - TARGET=sparc
      - TARGET=x86_64-zephyr-elf
      - TARGET=xtensa_sample_controller
      - TARGET=xtensa_intel_apl_adsp
      - TARGET=xtensa_intel_bdw_adsp
      - TARGET=xtensa_intel_byt_adsp
      - TARGET=xtensa_intel_s1000
      - TARGET=xtensa_nxp_imx_adsp
      - TARGET=xtensa_nxp_imx8m_adsp
      - TARGET="tools"
      - TARGET="cmake"

build:
    cache: true
    cache_dir_list:
        - ${SHIPPABLE_BUILD_DIR}/ccache
        - ${SHIPPABLE_BUILD_DIR}/sources
    pre_ci_boot:
        image_name: zephyrprojectrtos/ci
        image_tag: v0.10.0
        pull: true
        options: "-e HOME=/home/buildslave --privileged=true --tty --net=bridge --user buildslave"

    ci:
      - ccache -s
      - sudo apt-get install -y gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential libtool-bin
      - sudo apt-get install -y libreadline-dev gperf flex bison libncurses5-dev texinfo help2man lzip
      - sudo apt-get install -y python3.8-dev
      - unset CC
      - ./go.sh ${TARGET}
      - >
          sudo -E sh -c 'echo "IS_GIT_TAG=${IS_GIT_TAG}" >> $JOB_STATE/sdk.env';
          sudo -E sh -c 'echo "IS_RELEASE=${IS_RELEASE}" >> $JOB_STATE/sdk.env';
          sudo -E sh -c 'echo "IS_PRERELEASE=${IS_PRERELEASE}" >> $JOB_STATE/sdk.env';
          sudo -E sh -c 'echo "GIT_TAG_NAME=${GIT_TAG_NAME}" >> $JOB_STATE/sdk.env';
          sudo -E sh -c 'echo "PULL_REQUEST=${PULL_REQUEST}" >> $JOB_STATE/sdk.env';
          sudo -E sh -c 'echo "SDKNG_CIREPO_VERSIONNAME=${SDKNG_CIREPO_VERSIONNAME}" >> $JOB_STATE/sdk.env';
          cat $JOB_STATE/sdk.env;
          export S3_PATH="s3://incoming.zephyrproject.org/sdk-ng/${SDKNG_CIREPO_VERSIONNAME}";
          if [ "${TARGET}" == 'tools' ]; then
            echo "uploading zephyr-sdk-x86_64-hosttools-standalone-0.9.sh to ${S3_PATH}/";
            aws s3 cp zephyr-sdk-x86_64-hosttools-standalone-0.9.sh ${S3_PATH}/;
          elif [ "${TARGET}" == 'cmake' ]; then
            echo "uploading ${TARGET}.tar.bz2 to ${S3_PATH}/";
            aws s3 cp ${TARGET}.tar.bz2 ${S3_PATH}/;
          else
            echo "uploading ${TARGET}.tar.bz2 to ${S3_PATH}/";
            pushd build/output;
            case "${TARGET}" in
              xtensa_*)
                tar --exclude='build.log.bz2' -jcvf ../../${TARGET}.tar.bz2 xtensa/${TARGET#xtensa_}/*-zephyr-*;
                ;;
              *)
                tar --exclude='build.log.bz2' -jcvf ../../${TARGET}.tar.bz2 *-zephyr-*;
                ;;
            esac
            popd;
            aws s3 cp ${TARGET}.tar.bz2 ${S3_PATH}/;
          fi
      - ccache -s

    on_failure:
      - >
          if [ "${TARGET}" != 'tools' ]; then
            cat build/build_${TARGET}/build.log;
          fi

integrations:
  generic:
    - integrationName: aws_s3_simple
