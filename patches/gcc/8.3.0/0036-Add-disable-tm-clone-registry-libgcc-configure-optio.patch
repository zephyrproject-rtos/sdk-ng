From d1cedda04973882a412575123cdf04139cbdc8af Mon Sep 17 00:00:00 2001
From: wilson <wilson@138bc75d-0d04-0410-961f-82ee72b054a4>
Date: Thu, 27 Jun 2019 23:41:03 +0000
Subject: [PATCH 36/42] Add --disable-tm-clone-registry libgcc configure
 option.

This patch adds libgcc configuration option to disable TM clone
registry. This option helps to reduce code size for embedded targets
which do not need transactional memory support.

	gcc/
	* doc/install.texi: Document --disable-tm-clone-registry.
	libgcc/
	* Makefile.in (USE_TM_CLONE_REGISTRY): New.
	(CRTSTUFF_CFLAGS): Use USE_TM_CLONE_REGISTRY.
	* configure.ac: Add --disable-tm-clone-registry option.
	* configure: Regenerate.

git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/trunk@272769 138bc75d-0d04-0410-961f-82ee72b054a4
---
 gcc/ChangeLog        |  4 ++++
 gcc/doc/install.texi |  5 +++++
 libgcc/ChangeLog     |  7 +++++++
 libgcc/Makefile.in   |  4 +++-
 libgcc/configure     | 15 +++++++++++++++
 libgcc/configure.ac  | 10 ++++++++++
 6 files changed, 44 insertions(+), 1 deletion(-)

diff --git a/gcc/ChangeLog b/gcc/ChangeLog
index b34ea1795c1..e23b55324e7 100644
--- a/gcc/ChangeLog
+++ b/gcc/ChangeLog
@@ -1,3 +1,7 @@
+2019-06-27  Ilia Diachkov  <ilia.diachkov@optimitech.com>
+
+	* doc/install.texi: Document --disable-tm-clone-registry.
+
 2019-03-18  Andrew Burgess  <andrew.burgess@embecosm.com>
 
 	PR target/89627
diff --git a/gcc/doc/install.texi b/gcc/doc/install.texi
index bad696e3663..5e22d430e21 100644
--- a/gcc/doc/install.texi
+++ b/gcc/doc/install.texi
@@ -1261,6 +1261,11 @@ assumptions made by the configure test are incorrect.
 Specify that the target does not support TLS.
 This is an alias for @option{--enable-tls=no}.
 
+@item --disable-tm-clone-registry
+Disable TM clone registry in libgcc. It is enabled in libgcc by default.
+This option helps to reduce code size for embedded targets which do
+not use transactional memory.
+
 @item --with-cpu=@var{cpu}
 @itemx --with-cpu-32=@var{cpu}
 @itemx --with-cpu-64=@var{cpu}
diff --git a/libgcc/ChangeLog b/libgcc/ChangeLog
index d44cfdc18da..5652ab6c2ac 100644
--- a/libgcc/ChangeLog
+++ b/libgcc/ChangeLog
@@ -1,3 +1,10 @@
+2019-06-27  Ilia Diachkov  <ilia.diachkov@optimitech.com>
+
+	* Makefile.in (USE_TM_CLONE_REGISTRY): New.
+	(CRTSTUFF_CFLAGS): Use USE_TM_CLONE_REGISTRY.
+	* configure.ac: Add --disable-tm-clone-registry option.
+	* configure: Regenerate.
+
 2018-05-18  Kito Cheng <kito.cheng@gmail.com>
 	    Monk Chiang  <sh.chiang04@gmail.com>
 	    Jim Wilson <jimw@sifive.com>
diff --git a/libgcc/Makefile.in b/libgcc/Makefile.in
index dd8cee99fd3..60a558c028a 100644
--- a/libgcc/Makefile.in
+++ b/libgcc/Makefile.in
@@ -257,6 +257,8 @@ PICFLAG = @PICFLAG@
 
 CET_FLAGS = @CET_FLAGS@
 
+USE_TM_CLONE_REGISTRY = @use_tm_clone_registry@
+
 # Defined in libgcc2.c, included only in the static library.
 LIB2FUNCS_ST = _eprintf __gcc_bcmp
 
@@ -297,7 +299,7 @@ CRTSTUFF_CFLAGS = -O2 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \
   $(NO_PIE_CFLAGS) -finhibit-size-directive -fno-inline -fno-exceptions \
   -fno-zero-initialized-in-bss -fno-toplevel-reorder -fno-tree-vectorize \
   -fbuilding-libgcc -fno-stack-protector $(FORCE_EXPLICIT_EH_REGISTRY) \
-  $(INHIBIT_LIBC_CFLAGS)
+  $(INHIBIT_LIBC_CFLAGS) $(USE_TM_CLONE_REGISTRY)
 
 # Extra flags to use when compiling crt{begin,end}.o.
 CRTSTUFF_T_CFLAGS =
diff --git a/libgcc/configure b/libgcc/configure
index b2f3f870844..daad69217db 100644
--- a/libgcc/configure
+++ b/libgcc/configure
@@ -572,6 +572,7 @@ set_have_cc_tls
 vis_hide
 real_host_noncanonical
 accel_dir_suffix
+use_tm_clone_registry
 force_explicit_eh_registry
 CET_FLAGS
 fixed_point
@@ -678,6 +679,7 @@ enable_decimal_float
 with_system_libunwind
 enable_cet
 enable_explicit_exception_frame_registration
+enable_tm_clone_registry
 with_glibc_version
 enable_tls
 with_gcc_major_version_only
@@ -1321,6 +1323,7 @@ Optional Features:
                           register exception tables explicitly at module
                           start, for use e.g. for compatibility with
                           installations without PT_GNU_EH_FRAME support
+  --disable-tm-clone-registry    disable TM clone registry
   --enable-tls            Use thread-local storage [default=yes]
 
 Optional Packages:
@@ -4875,6 +4878,18 @@ fi
 
 
 
+# Check whether --enable-tm-clone-registry was given.
+if test "${enable_tm_clone_registry+set}" = set; then :
+  enableval=$enable_tm_clone_registry;
+use_tm_clone_registry=
+if test "$enable_tm_clone_registry" = no; then
+  use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0
+fi
+
+fi
+
+
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
 $as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
 if test "${acl_cv_prog_gnu_ld+set}" = set; then :
diff --git a/libgcc/configure.ac b/libgcc/configure.ac
index b59aa746afc..d3a8278fe53 100644
--- a/libgcc/configure.ac
+++ b/libgcc/configure.ac
@@ -256,6 +256,16 @@ fi
 ])
 AC_SUBST([force_explicit_eh_registry])
 
+AC_ARG_ENABLE([tm-clone-registry],
+[  --disable-tm-clone-registry    disable TM clone registry],
+[
+use_tm_clone_registry=
+if test "$enable_tm_clone_registry" = no; then
+  use_tm_clone_registry=-DUSE_TM_CLONE_REGISTRY=0
+fi
+])
+AC_SUBST([use_tm_clone_registry])
+
 AC_LIB_PROG_LD_GNU
 
 AC_MSG_CHECKING([for thread model used by GCC])
-- 
2.20.1

