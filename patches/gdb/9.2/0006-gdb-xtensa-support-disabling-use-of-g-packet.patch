From 7667369af90c291fafb7d7a73f26c999f1ca8359 Mon Sep 17 00:00:00 2001
From: Daniel Leung <daniel.leung@intel.com>
Date: Mon, 14 Sep 2020 13:08:44 -0700
Subject: [PATCH 6/6] gdb: xtensa: support disabling use of 'g' packet

The xt-ocd from Xtensa's official toolchain may not support
'g' packet. So this allows building GDB which won't query
registers using 'g' packets but instead using 'p' packets only.

Signed-off-by: Daniel Leung <daniel.leung@intel.com>
---
 gdb/configure     | 20 ++++++++++++++++++++
 gdb/configure.ac  | 14 ++++++++++++++
 gdb/xtensa-tdep.c | 12 ++++++++++++
 3 files changed, 46 insertions(+)

diff --git a/gdb/configure b/gdb/configure
index 87d62cfa3a..eaa68c1b58 100755
--- a/gdb/configure
+++ b/gdb/configure
@@ -911,6 +911,7 @@ with_libbabeltrace_prefix
 with_xxhash
 with_libxxhash_prefix
 enable_xtensa_use_target_regnum
+enable_xtensa_remote_g_packet
 enable_unit_tests
 '
       ac_precious_vars='build_alias
@@ -1580,6 +1581,8 @@ Optional Features:
                           is auto)
   --enable-xtensa-use-target-regnum
                           Use remote target register numbers (Xtensa target)
+  --disable-xtensa-remote-g-packet
+                          Disable g packet for remote Xtensa target
   --enable-unit-tests     Enable the inclusion of unit tests when compiling
                           GDB
 
@@ -18898,6 +18901,23 @@ if test x"$enable_xtensa_use_target_regnum" = xyes; then
   CPPFLAGS="$CPPFLAGS -DXTENSA_USE_TGT_REGNUM"
 fi
 
+# Use g packet for remote Xtensa target
+# Check whether --enable-xtensa-remote-g-packet was given.
+if test "${enable_xtensa_remote_g_packet+set}" = set; then :
+  enableval=$enable_xtensa_remote_g_packet; case $enableval in
+    yes | no)
+      enable_xtensa_use_g_packet=$enableval ;;
+    *)
+      as_fn_error $? "bad value $enableval for --enable-xtensa-remote-g-packet" "$LINENO" 5 ;;
+  esac
+else
+  enable_xtensa_use_g_packet=yes
+fi
+
+if test x"$enable_xtensa_use_g_packet" = xno; then
+  CPPFLAGS="$CPPFLAGS -DXTENSA_DISABLE_REMOTE_G_PACKET"
+fi
+
 NM_H=
 rm -f nm.h
 if test "${nativefile}" != ""; then
diff --git a/gdb/configure.ac b/gdb/configure.ac
index dac55b943c..eb27f932c4 100644
--- a/gdb/configure.ac
+++ b/gdb/configure.ac
@@ -2205,6 +2205,20 @@ if test x"$enable_xtensa_use_target_regnum" = xyes; then
   CPPFLAGS="$CPPFLAGS -DXTENSA_USE_TGT_REGNUM"
 fi
 
+# Use g packet for remote Xtensa target
+AC_ARG_ENABLE(xtensa-remote-g-packet,
+AS_HELP_STRING([--disable-xtensa-remote-g-packet], [Disable g packet for remote Xtensa target]),
+  [case $enableval in
+    yes | no)
+      enable_xtensa_use_g_packet=$enableval ;;
+    *)
+      AC_MSG_ERROR([bad value $enableval for --enable-xtensa-remote-g-packet]) ;;
+  esac],
+  [enable_xtensa_use_g_packet=yes])
+if test x"$enable_xtensa_use_g_packet" = xno; then
+  CPPFLAGS="$CPPFLAGS -DXTENSA_DISABLE_REMOTE_G_PACKET"
+fi
+
 NM_H=
 rm -f nm.h
 if test "${nativefile}" != ""; then
diff --git a/gdb/xtensa-tdep.c b/gdb/xtensa-tdep.c
index 7d9e0c7d31..bc1078336d 100644
--- a/gdb/xtensa-tdep.c
+++ b/gdb/xtensa-tdep.c
@@ -3158,6 +3158,16 @@ xtensa_remote_register_number (struct gdbarch *gdbarch, int regnum)
 }
 #endif
 
+int
+xtensa_remote_supports_g_packet (struct gdbarch *gdbarch)
+{
+#ifdef XTENSA_DISABLE_REMOTE_G_PACKET
+  return 0;
+#else
+  return 1;
+#endif
+}
+
 /* Module "constructor" function.  */
 
 extern struct gdbarch_tdep xtensa_tdep;
@@ -3258,6 +3268,8 @@ xtensa_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)
   set_solib_svr4_fetch_link_map_offsets
     (gdbarch, svr4_ilp32_fetch_link_map_offsets);
 
+  set_gdbarch_remote_supports_g_packet (gdbarch, xtensa_remote_supports_g_packet);
+
   /* Hook in the ABI-specific overrides, if they have been registered.  */
   gdbarch_init_osabi (info, gdbarch);
 
-- 
2.28.0

